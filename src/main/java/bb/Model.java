package bb;

import java.util.TimerTask;

public class Model extends TimerTask {

	static int board[][] = new int[30][30];
	static int exit[][] = new int[30][30];
	static int ii = 1;
	static int jj = 1;
	boolean end = false;
	public static Model instance = null;
	public String name;

public int getPos1(){
	return ii;
}

public int getPos2(){
	return jj;
}
public static synchronized Model getInstance()
{
	if(instance == null)
		instance = new Model();
	return instance;
	
}
	public void run() {
		if(end()==true)
		{
		View.stan = 2;
		}
		View.applet.repaint();

	}		
	public boolean end() {
		for(int i = 0;i<board.length;i++)
		{
			for(int j=0;j<board[0].length;j++)
			{
				if((board[29][29]==4))
				{
					return true;
				}
			}
		}
		return false;
	}
	public void tablica()
	{
		int board2[][] = {
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1},
				{1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1},
				{1,0,0,1,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1},
				{1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1},
				{1,1,1,0,1,1,1,1,0,1,1,1,0,1,1,0,0,0,1,1,1,0,0,0,0,1,1,0,1,1},
				{1,1,1,0,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,0,1,1,0,1,1},
				{1,1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1},
				{1,1,1,0,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1},
				{1,1,1,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,0,0,0,0,1,1,0,1,1,0,1,1},
				{1,1,1,0,1,1,1,0,1,1,1,1,1,0,0,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1},
				{1,0,0,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,1,1,0,1,1},
				{1,0,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1},
				{1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1},
				{1,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1},
				{1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1},
				{1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,0,0,0,1,1,1,1},
				{1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,1,0,1,1,1,1,1,0,0,0,1,1},
				{1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1},
				{1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1},
				{1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1},
				{1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2},
		};
		
		View.stan = 0;	

	for(int i = 0;i<board.length;i++)
	{
		for(int j=0;j<board[0].length;j++)
		{
			board[i][j]=board2[i][j];
		}
	}
	for(int i = 0;i<board.length;i++)
	{
		for(int j=0;j<board[0].length;j++)
		{
			if(board[i][j]==2)
			{
				board[i][j] = 0;
				exit[i][j] = 2;
			}
		}
	}
	
	}
	public static void ifw() {
		
		if(board[ii-1][jj]==0)
		{
			board[ii-1][jj]=4;
			board[ii][jj]=0;
			ii--;
		}
		else if((board[ii-1][jj]==3)&&(board[ii-2][jj]==0))
		{
			
			board[ii-1][jj]=4;
			board[ii][jj]=0;
			ii--;
		}
	}
	public static void ifa() {
		if(board[ii][jj-1]==0)
		{
			board[ii][jj-1]=4;
			board[ii][jj]=0;
			jj--;
		}
		else if((board[ii][jj-1]==3)&&(board[ii][jj-2]==0))
		{
			
			board[ii][jj-1]=4;
			board[ii][jj]=0;
			jj--;
		}
	}
	public static void ifs() {
		if(board[ii+1][jj]==0)
		{
			board[ii+1][jj]=4;
			board[ii][jj]=0;
			ii++;
		}
		else if((board[ii+1][jj]==3)&&(board[ii+2][jj]==0))
		{
			
			board[ii+1][jj]=4;
			board[ii][jj]=0;
			ii++;
		}
		
	}
	public static void ifd() {
		if(board[ii][jj+1]==0)
		{
			board[ii][jj+1]=4;
			board[ii][jj]=0;
			jj++;
		}
		else if((board[ii][jj+1]==3)&&(board[ii][jj+2]==0))
		{
			
			board[ii][jj+1]=4;
			board[ii][jj]=0;
			jj++;
		}
	}
    static boolean ifexit()
    {
    if (exit[29][29]==4)
    	return true;
    return false;
    }
    
	
}
